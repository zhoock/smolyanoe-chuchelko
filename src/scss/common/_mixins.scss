// src/scss/common/_mixins.scss

// Преобразуем CSS-переменные в SCSS-переменные
$ms-02: 6.876px; // 0.382rem;
$ms-01: 11.125px; // 0.618rem;
$ms-0: 18px; // 1rem;
$ms-1: 29.124px; // 1.618rem;
$ms-2: 47.123px; // 2.618rem;
$ms-3: 76.244px; // 4.236rem;
$ms-4: 123.363px; // 6.854rem;

@use 'sass:math';
@use 'sass:color';

// Buttons

@mixin button-variant(
  $color,
  $background,
  $hover-color,
  $hover-background,
  $margin: var(--ms-1) 0,
  $disabled-background: var(--link-color, #ddd)
) {
  margin: $margin;
  padding: var(--ms-01) var(--ms-0);
  color: var(#{$color});
  border: 0;
  border-radius: var(--ms-01);
  transition: background-color 200ms ease;
  background-color: var(#{$background});
  cursor: pointer;
  appearance: none;
  user-select: none;

  &:hover,
  &:active {
    color: var(#{$hover-color});
    background-color: var(#{$hover-background});

    @media (hover: none) and (pointer: coarse) {
      color: var(--link-color, #dddddd);
      background-color: var(#{$background});
    }
  }

  &:active {
    scale: 0.98;
  }

  &.disabled,
  &[disabled] {
    &:hover,
    &:focus,
    &:active {
      background-color: $disabled-background;
      cursor: default;
    }
  }
}

$old-phones: 'width < 375px';
$phones: 'width >= 375px';
$tablets: 'width >= 768px';
$desktops: 'width >= 1024px';

@mixin breakpoint($point) {
  /* Для очень маленьких экранов (старые телефоны, узкие экраны) */

  @if $point == old-phones {
    @media ($old-phones) {
      @content;
    }
  }

  // Для современных телефонов

  @if $point == phones {
    @media ($phones) {
      @content;
    }
  }

  // Для планшетов (iPad Mini, Galaxy Tab)

  @if $point == tablet {
    @media ($tablets) {
      @content;
    }
  }

  // Для ноутбуков и десктопов

  @if $point == desktops {
    @media ($desktops) {
      @content;
    }
  }
}

// link

@mixin link-colors($normal, $hover: false, $active: false, $visited: false, $focus: false) {
  color: var(#{$normal});

  @if $hover {
    &:hover {
      color: var(#{$hover});
    }
  }

  @if $active {
    &:active {
      color: $active;
    }
  }

  @if $visited {
    &:visited {
      color: $visited;
    }
  }

  @if $focus {
    &:focus {
      color: $focus;
    }
  }
}

// https://designmodo.com/vertical-rhythm/

@mixin adjust-font-size-to(
  $to-font-size,
  $scale-value: 1,
  $base-line-height: calc(18px * 1.618),
  $base-font-size: 18px
) {
  margin-block: math.div($base-line-height * $scale-value, $to-font-size) + em;
  font-size: math.div($to-font-size, $base-font-size) + rem;
  line-height: math.div($base-line-height * 1.618, $to-font-size);
}

// List

@mixin list($block) {
  display: flex;
  flex-wrap: nowrap;
  gap: var(--ms-0);
  margin: 0 calc(-1 * var(--ms-1)) var(--ms-1);
  padding: 0 var(--ms-1);
  overflow-x: auto;
  scroll-snap-type: x mandatory;

  @extend %hide-scrollbar;

  @include breakpoint(tablet) {
    display: grid;
    gap: $ms-1;
    margin: 0 0 var(--ms-1);
    padding: 0;
    grid-template: minmax(323px, auto) / repeat(auto-fit, minmax(calc(1 / 4 * 1000px), 1fr));

    &:has(:hover) #{$block}__card:not(:hover) {
      opacity: 0.5;
    }
  }

  @include breakpoint(desktops) {
    grid-template-columns: repeat(auto-fill, minmax(calc(1 / 4 * 1000px), 1fr));
  }
}

%hide-scrollbar {
  /* Hide scrollbar for IE, Edge and Firefox */
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */

  /* Hide scrollbar for Chrome, Safari and Opera */
  &::-webkit-scrollbar {
    display: none;
  }
}

%filter {
  background: rgba(var(--extra-background-color), 0.8);
  backdrop-filter: blur(20px);
}

%card {
  flex: none;
  inline-size: 100%;
  transition: all 200ms ease;
  scroll-snap-align: center;
  scroll-snap-stop: always;

  a {
    display: block;
    text-decoration: none;

    &:focus-visible {
      // позволит визуально выделить элемент за пределами его границ, даже если он обрезан.
      outline-offset: -4px; /* Смещение от границы элемента */
    }

    img {
      margin-block-end: 0;
    }
  }
}

%description {
  margin-block-start: var(--ms-01);

  time {
    display: block;
    color: var(--fucking-color, #ababab);
  }
}
