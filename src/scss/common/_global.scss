@use 'sass:color';

:root {
  position: relative;
  min-block-size: 100%;
}

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/* Prevent font size inflation */
html {
  color: var(--text-color, #ddd);
  font: var(--light, 300) var(--base-font-size) var(--base-font-family);
  line-height: var(--base-line-height);
  text-size-adjust: none;
  min-block-size: 100%;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

html:focus-within {
  scroll-behavior: smooth; /* Make the scrolling inside of any scrollable element smooth */
}

img,
picture,
svg,
video,
canvas {
  vertical-align: middle; /* Makes text next to inline images look better */
  font-style: italic; /* If the images don't load it makes the alt decription look better */
  background-repeat: no-repeat; /* The background repeat and size are there if you want to load a picture first like a backroung image that is worse quality while the better quality image loads */
  background-size: cover;
  max-inline-size: 100%; /* Makes it responsive */
  block-size: auto; /* Makes it responsive */
}

input,
button,
textarea,
select {
  font: inherit; /* Makes these elements inherit fonts */
}

body {
  background: var(--main-background-color);
  scroll-behavior: smooth; /* Makes normal scrolling smooth */
  block-size: 100vb;

  #root {
    display: grid;
    block-size: 100vb;
    grid-template:
      'header' calc(1.618rem * 2)
      'main' auto
      'footer' 165px / 1fr;

    .main-background {
      background: var(--main-background-color, #20201d);
    }

    .extra-background {
      background: rgb(var(--extra-background-color));
    }

    .nested-background {
      color: var(--nested-background-text-color, #373633);
      background: var(--nested-background-color, #ddd);
    }

    // @container style(--button-background-color: var(--icy-mist)) {
    //   .album__wrapper {
    //     color: var(--graphite-green);
    //   }
    // }

    .wrapper {
      margin-inline: auto;
      margin-block: 0;
      padding-inline: var(--ms-1);
      padding-block: 0;
      inline-size: min(100vi, 1000px);
    }

    main {
      display: grid;
      grid-area: main;

      @include breakpoint(old-phones) {
        grid-template-rows: 190px auto;
      }

      @include breakpoint(phones) {
        grid-template-rows: 59vw auto;
      }

      @include breakpoint(tablet) {
        grid-template-rows: 22vw auto;
      }

      @include breakpoint(desktops) {
        grid-template-rows: 15vw auto;
      }
    }
  }

  p,
  img,
  iframe {
    margin-block-end: $ms-1;
    text-wrap: balance;
  }

  h1,
  h2,
  h3,
  h4 {
    color: var(--heading-color, #998238);
    font-family: var(--base-accent-font);
    font-weight: var(--light, 300);
    letter-spacing: 1.618px;
    text-transform: uppercase;
    text-wrap: balance;
  }

  h2 {
    @include adjust-font-size-to($ms-1);

    @include breakpoint(tablet) {
      @include adjust-font-size-to($ms-2);
    }
  }

  h3 {
    letter-spacing: 2.5px;

    @include adjust-font-size-to($ms-0, 0);

    @include breakpoint(tablet) {
      @include adjust-font-size-to($ms-1, 0.382);
    }

    &.error {
      color: var(--error-color);
    }
  }

  ul,
  ol {
    margin-block-end: $ms-1;

    li {
      list-style: none;

      // text-wrap: balance; // убрать отсюда, потому что в breadcrumb переносится стрелка
    }
  }

  a {
    color: var(--link-color, #ababab);
    text-decoration-thickness: from-font;
    text-underline-offset: 5px;
    transition: all 200ms ease;

    @include link-colors(--link-color, --link-color-hover);

    @media (hover: none) and (pointer: coarse) {
      &:hover {
        /* Пользователи сенсорных устройств оценят отсутствие нежелательных эффектов */
        background-color: inherit;
      }
    }

    &.dashed {
      border-block-end: 1px dashed var(--link-color, #ddd);
    }

    &:hover {
      border-bottom-color: var(--link-color-hover, #d5d5d5);
    }

    &[class*=' icon-'] {
      text-decoration: none;
    }

    &:not([class]) {
      text-decoration-skip-ink: auto; /* Makes link undelines look better */
    }
  }

  .breadcrumb {
    ul {
      display: flex;
      flex-wrap: wrap;
      margin-block-start: var(--ms-1);

      li {
        &:not(:last-child)::after {
          content: '→';
          display: inline-flex;
          margin-inline: var(--ms-02);
          margin-block: 0;
        }

        &.active {
          color: var(--fucking-color, #9b9b9a);
        }
      }
    }
  }
}

:focus-visible {
  outline: 4px solid var(--outline-color);
}

::selection {
  background-color: var(--selection-color);
}

.visually-hidden {
  position: absolute; /* элемент вырывают из потока */
  margin: -1px; /* элемент убирают из поля зрения, сдвинув на размер самого себя */
  border: 0; /* убирают границу, она тоже может быть у каких-то элементов */
  padding: 0; /* обнуляют отступы, они есть у некоторых элементов по умолчанию */
  overflow: hidden; /* на всякий случай скрывают видимое за пределами блока */
  clip: rect(
    0 0 0 0
  ); /* это свойство обрезает видимую область до нулевого значения */

  inline-size: 1px; /* делают элемент очень маленьким, но таким, чтобы не пропал совсем */
  block-size: 1px;
}
